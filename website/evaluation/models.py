from django.db import models


class Result(models.Model):
    """
    Stores the search query, model names and the winner model against the evaluators user ID.
    """
    search_query = models.CharField(max_length=800)
    model_A = models.CharField(max_length=100)
    model_B = models.CharField(max_length=100)
    result = models.CharField(max_length=100)
    game_date = models.DateTimeField()
    user_id = models.IntegerField()

    def __str__(self):
        return self.search_query, self.model_A, self.model_B, self.result, self.user_id


class Score(models.Model):
    """
    Takes result_id from Result table, and adds/updates the scores of the models
    in Result table.
    """
    team_id = models.CharField(max_length=100)
    mu = models.FloatField()
    sigma = models.FloatField()
    result_id = models.IntegerField()

    def __str__(self):
        return self.team_id, self.mu, self.sigma, self.result_id


class ScoresBk(models.Model):
    """
    Stores a row for each INSERT and UPDATE on Score table.
    """
    score_id = models.IntegerField()
    team_id = models.CharField(max_length=100)
    mu = models.FloatField()
    sigma = models.FloatField()
    result_id = models.IntegerField()


class Summaries(models.Model):
    """
    Stores 3-4 line summary of the pptx that is displayed in search results.
    """
    ppt_file_names = models.CharField(max_length=50)
    file_summary = models.CharField(max_length=1000)

    def __str__(self):
        return self.ppt_file_names, self.file_summary


class TeamsOutput(models.Model):
    """
    Takes result_id from Result table and stores outputs that were generated by models.
    """
    result_id = models.IntegerField()
    model_a_output = models.CharField(max_length=500)
    model_b_output = models.CharField(max_length=500)

    def __str__(self):
        return self.result_id, self.model_a_output, self.model_b_output
